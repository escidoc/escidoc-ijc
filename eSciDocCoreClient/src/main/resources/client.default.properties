search.database=escidoc_all
# Namespaces
# ir
ns.ir.item=http://www.escidoc.de/schemas/item/0.10
ns.ir.container=http://www.escidoc.de/schemas/container/0.9
ns.ir.context=http://www.escidoc.de/schemas/context/0.7
ns.ir.content-relation=http://www.escidoc.de/schemas/content-relation/0.1
ns.ir.components=http://www.escidoc.de/schemas/components/0.9
# oum
ns.oum.organizational-unit=http://www.escidoc.de/schemas/organizationalunit/0.8
# aa
ns.aa.user-account=http://www.escidoc.de/schemas/useraccount/0.7
ns.aa.user-group=http://www.escidoc.de/schemas/usergroup/0.6
ns.aa.grant=http://www.escidoc.de/schemas/grants/0.5
ns.aa.role=http://www.escidoc.de/schemas/role/0.5
# cmm
ns.cmm.content-model=http://www.escidoc.de/schemas/contentmodel/0.1
# statistic
ns.statistic.scope=http://www.escidoc.de/schemas/scope/0.4
ns.statistic.report-definition=http://www.escidoc.de/schemas/reportdefinition/0.4
ns.statistic.aggregation-definition=http://www.escidoc.de/schemas/aggregationdefinition/0.4
ns.statistic.statistic-data=
# oai
ns.oai.set-definition=http://www.escidoc.de/schemas/setdefinition/0.1

# HttpClient parameters
# see: http://hc.apache.org/httpcomponents-client-ga/tutorial/html/
# Some parameters require a complex type. proxy-settings for example,
# consisting of host and port, are passed as one object.
# These parameters are encoded using the following formats: 

# http.protocol.version=<protocol>/<major>.<minor>
# http.route.local-address=[<hostname>/]<ipAddress>
# http.route.default-proxy=[<scheme>://]<host>[:<port>]
# http.virtual-host=[<scheme>://]<host>[:<port>]
# http.default-host=[<scheme>://]<host>[:<port>]

# To each header its own property.
# Append ascending number-suffixes starting with 1. 
# http.default-headers1=<headerName>:<headerValue>
# http.default-headers2=<headerName>:<headerValue>

# To each cookie-pattern its own property.
# Append ascending number-suffixes starting with 1.
# http.protocol.cookie-datepatterns1=<SimpleDateFormatCompliantString>
# http.protocol.cookie-datepatterns2=<SimpleDateFormatCompliantString>

# max-per-route should be able to define a maximum per route.
# the current implementation supports a default maximum for all routes only
# would have to use xml, to support different maximums for different routes
# http.conn-manager.max-per-route=<integer>

# forced-route should be further configurable.
# this implementation supports a HttpRoute only
# would have to use xml, to support other parameters
# http.route.forced-route=[<scheme>://]<host>[:<port>]
http.conn-manager.max-per-route=5
