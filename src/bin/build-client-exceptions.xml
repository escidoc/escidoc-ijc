<?xml version="1.0" encoding="UTF-8"?>
<project name="Client exception generation" basedir="../.." default="generate-client-exceptions">

	<property name="client.base.exception.dir" value="${client.gen.dir}/de/escidoc/core/client/exceptions" />

	<property name="axis.base.package" value="de.escidoc.core.common.exceptions.remote" />
	<property name="client.base.package" value="de.escidoc.core.client.exceptions" />

	<property name="axis.base.exception.dir" value="${axis.gen.dir}/de/escidoc/core/common/exceptions/remote" />

	<target name="clean">
		<delete dir="${client.gen.dir}" />
	</target>

	<target name="prepare">
		<mkdir dir="${client.gen.dir}" />
		<mkdir dir="${client.base.exception.dir}" />
	</target>

	<target name="generate-client-exceptions" depends="clean, prepare, copy-axis-exceptions, replace-package-name, replace-base-class, add-constructors">

	</target>



	<target name="copy-axis-exceptions">
		<copy todir="${client.base.exception.dir}">
			<fileset dir="${axis.base.exception.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="replace-package-name">
		<replace dir="${client.base.exception.dir}" token="package ${axis.base.package}" value="package ${client.base.package}">
			<include name="**/*.java" />
		</replace>

	</target>

	<target name="replace-base-class">
		<replace dir="${client.base.exception.dir}" token="extends org.apache.axis.AxisFault" value="extends EscidocClientException">
			<include name="**/*.java" />
		</replace>

		<replace dir="${client.base.exception.dir}" token="extends ${axis.base.package}" value="extends ${client.base.package}">
			<include name="**/*.java" />
		</replace>
	</target>

	<target name="add-constructors">
		<replace dir="${client.base.exception.dir}" token="public class " value="import java.lang.reflect.Field; public class ">
			<include name="**/*.java" />
		</replace>
		<replace dir="${client.base.exception.dir}" token="public abstract class " value="import java.lang.reflect.Field; public abstract class ">
			<include name="**/*.java" />
		</replace>
		<replaceregexp byline="true">
			<regexp pattern="(public ([^ ]+ )*class ([^ ]+).*\{)" />
			<substitution expression="\1 public \3(String message, Throwable cause) {super(message, cause);try {Class te = \3.class;Class cE =Class.forName(te.getName().replace(&quot;de.escidoc.core.client.exceptions&quot;,&quot;de.escidoc.core.common.exceptions.remote&quot;));Field[] tF = te.getDeclaredFields();Field[] cF = cE.getDeclaredFields();for (int i = 0; i &lt; tF.length; ++i) {tF[i].setAccessible(true);cF[i].setAccessible(true);tF[i].set(this, cF[i].get(cause));}} catch (Exception e) { throw new RuntimeException(e);}}" />
			<fileset dir="${client.base.exception.dir}">
				<include name="**/*.java" />
			</fileset>
		</replaceregexp>
	</target>




</project>