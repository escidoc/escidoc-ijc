#################################################################################################
# Properties to configure which types of eSciDoc-Objects should get indexed 
# or deleted from the index under which conditions:
#
#Example: If eSciDoc-items should get written into the index, 
#         your properties for the item-indexing should start with the prefix Resource.Item.
#
#         Object-Types that can get indexed are:
#             -Item
#             -Container
#             -Context
#             -OrganizationalUnit
#			  -ContentModel
#			  -ContentRelation
#
#					For each Object-Type that shall get indexed in this index you can define the following properties:
#         1. Define if indexing should be done synchronously or asynchronously
#            Resource.<objecttype>.indexAsynchronous=true|false
#         2. Optionally define a property Resource.<objecttype>.indexingPrerequisiteXpath
#            if you only want to index the item if it meets some conditions.
#            This property expects an XPath-Expression
#         3. Optionally define a property Resource.<objecttype>.deletePrerequisiteXpath
#            if you want to delete the object from the index when it meets some conditions.
#            This property expects an XPath-Expression
#         4. Optionally define a property Resource.<objecttype>.indexReleasedVersion=true or =both
#            Set value to true:
#            if you only want to index the last released version of an object.
#            If this option is set, always the last released version of an object is indexed.
#            If no last released version exists, nothing is indexed.
#            Set value to both:
#            if you want to index the last released version of an object additionally to the last version of an object.
#            If this option is set, always the last released version and the last version of an object is indexed.
#            If no last released version exists, only the last version is indexed.
#            NOTE: if value is both you have to set the property cqlTranslator.filterLatestRelease in the srw-properties file to true!!
#         5. Optionally for resource Item, you can define a property Resource.Item.indexFulltextVisibilities
#            where you can define fulltexts of which visibility shall get indexed. (whitespace-separated)
#            eg Resource.Item.indexFulltextVisibilities=private audience public
#            This is just a variable with name INDEX_FULLTEXT_VISIBILITIES that gets passed to the indexing-stylesheet.
#            So you have to handle fulltext-indexing dependent on this variable in your indexing-stylesheet.
#
#            You can define properties for more than one objectType in one configuration-file.
#################################################################################################

Resource.OrganizationalUnit.indexAsynchronous=true
