<?xml version="1.0" encoding="UTF-8"?>

<!-- 
        eSciDoc Login Configuration
        ===========================
        
        This file defines the login mechanism(s) that shall be used for the
        login of eSciDoc users.
        The eSciDoc login is based on spring security. For detailed information
        about spring security, see 
        http://static.springframework.org/spring-security/site/index.html.
        Currently, login and authentication of the user is supported for
            - LDAP
            - Shibboleth
            - Login using the eSciDoc UserAccount resource (deprecated: this
              will be removed in one of the following versions.)
        This file has to be placed in the classpath, e.g. in jboss it should be
        placed in the server's "conf" folder (<jboss_dir>/server/<server name>/conf/)
 -->

<beans
xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:security="http://www.springframework.org/schema/security"
      xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.xsd"

  default-autowire="no"
  default-lazy-init="true"
>
 
    <!--######FORM-BASED-LOGIN#####################################################################################################################-->
    <!-- Uncomment this to enable form-based login using the internal 
         UserAccount resource -->

    <security:http auto-config="false" access-denied-page="/aa/login/login-repeated.html"
        path-type="regex" entry-point-ref="authenticationProcessingFilterEntryPoint">
        <security:intercept-url pattern="/aa/login[^/].*$" access="IS_AUTHENTICATED_FULLY"/>
        <security:intercept-url pattern="/.*" filters="none" />
        <security:x509 subject-principal-regex="CN=(.*?)," user-service-ref="jdbcUserService"/>
        <security:form-login
            authentication-failure-url="/aa/login/login-repeated.html"
            default-target-url="/aa/login/missing-target.html" />
    </security:http>
    
    <bean id="authenticationProcessingFilterEntryPoint" 
            class="de.escidoc.core.aa.springsecurity.EscidocAuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl" value="/aa/login/login.html"/>
    </bean>
    
    <security:authentication-provider>
        <security:jdbc-user-service
            id="jdbcUserService"
            data-source-ref="escidoc-core.DataSource"
            users-by-username-query="select loginname, password, 'true' as active from aa.user_account where loginname = ?"
            authorities-by-username-query="select loginname, 'ROLE_ESCIDOC_USER' from aa.user_account where loginname = ?" />
    </security:authentication-provider>
    
    <!--###########################################################################################################################-->
    <!--#######LDAP-LOGIN####################################################################################################################-->

    <!-- Uncomment this and fill in the appropriate values to enable login using 
         LDAP.
         Define url of your LDAP-Server in bean contextSource
         In bean=userSearch, {0} is a placeholder for the login name of the
         user. 
         In DefaultLdapAuthoritiesPopulator, adapt constructor-arg 2 and properties:
         in property groupSearchFilter {0} is a placeholder for dn and {1} is a placeholder for uid-->

    <!--
    <security:http auto-config="false" access-denied-page="/aa/login/login-repeated.html"
        path-type="regex" entry-point-ref="authenticationProcessingFilterEntryPoint">
        <security:intercept-url pattern="/aa/login[^/].*$" access="IS_AUTHENTICATED_FULLY"/>
        <security:intercept-url pattern="/.*" filters="none" />
        <security:x509 subject-principal-regex="CN=(.*?)," user-service-ref="jdbcUserService"/>
        <security:form-login
            authentication-failure-url="/aa/login/login-repeated.html"
            default-target-url="/aa/login/missing-target.html" />
    </security:http>
        
    <bean id="authenticationProcessingFilterEntryPoint" 
            class="de.escidoc.core.aa.springsecurity.EscidocAuthenticationProcessingFilterEntryPoint">
      <property name="loginFormUrl" value="/aa/login/login.html"/>
    </bean>
    
    <bean id="contextSource"
        class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <constructor-arg value="ldap://ldap.example.org/ou=example,ou=org"/>
    </bean>

    <bean id="userSearch"
        class="org.springframework.security.ldap.search.FilterBasedLdapUserSearch">
        <constructor-arg index="0" value="ou=people"/>
        <constructor-arg index="1" value="(uid={0})"/>
        <constructor-arg index="2" ref="contextSource" />
    </bean>

    <bean id="ldapAuthProvider"
        class="org.springframework.security.providers.ldap.LdapAuthenticationProvider">
        <constructor-arg>
            <bean class="org.springframework.security.providers.ldap.authenticator.BindAuthenticator">
                <constructor-arg ref="contextSource"/>
                <property name="userSearch" ref="userSearch" />
            </bean>
        </constructor-arg>
        <constructor-arg>
            <bean class="org.springframework.security.ldap.populator.DefaultLdapAuthoritiesPopulator">
                <constructor-arg ref="contextSource"/>
                <constructor-arg value="ou=group"/>
                <property name="groupRoleAttribute" value="cn"/>
                <property name="groupSearchFilter" value="(member={0})"/>
                <property name="rolePrefix" value=""/>
                <property name="convertToUpperCase" value="false"/>
            </bean>
        </constructor-arg>
        <property name="userDetailsContextMapper">
            <bean class="de.escidoc.core.aa.ldap.EscidocLdapContextMapper"/>
        </property>
        <security:custom-authentication-provider />
    </bean>

    <security:authentication-provider>
        <security:jdbc-user-service
            id="jdbcUserService"
            data-source-ref="escidoc-core.DataSource"
            users-by-username-query="select loginname, password, 'true' as active from aa.user_account where loginname = ?"
            authorities-by-username-query="select loginname, 'ROLE_ESCIDOC_USER' from aa.user_account where loginname = ?" />
    </security:authentication-provider>
    
        -->

    <!--###########################################################################################################################-->
    <!--########SHIBBOLETH-LOGIN###################################################################################################################-->
    
    <!-- Uncomment this to enable login using shibboleth 
        Replace property serviceProviderBaseUrl with the url of your Shibboleth service provider
    -->
    <!--
    <security:http auto-config="false" entry-point-ref="entryPoint"
        path-type="regex">
        <security:intercept-url pattern="/aa/login[^/].*$" access="IS_AUTHENTICATED_FULLY"/>
        <security:intercept-url pattern="/.*" filters="none" />
        <security:x509 subject-principal-regex="CN=(.*?)," user-service-ref="jdbcUserService"/>
    </security:http>
    
    <bean id="shibFilter" class="de.escidoc.core.aa.shibboleth.ShibbolethAuthenticationFilter">
        <security:custom-filter before="AUTHENTICATION_PROCESSING_FILTER"/>
    </bean>
    <bean id="entryPoint" class="de.escidoc.core.aa.shibboleth.ShibbolethAuthenticationEntryPoint">
        <property name="serviceProviderBaseUrl" value="http://sp.example.org" />
        <property name="sessionInitiatorPath" value="/Shibboleth.sso/Login" />
    </bean>
    <bean id="shibProvider" class="de.escidoc.core.aa.shibboleth.ShibbolethAuthenticationProvider">
        <security:custom-authentication-provider />
    </bean>
    <security:authentication-provider>
        <security:jdbc-user-service
            id="jdbcUserService"
            data-source-ref="escidoc-core.DataSource"
            users-by-username-query="select loginname, password, 'true' as active from aa.user_account where loginname = ?"
            authorities-by-username-query="select loginname, 'ROLE_ESCIDOC_USER' from aa.user_account where loginname = ?" />
    </security:authentication-provider>
    
    -->
    <!--###########################################################################################################################-->
    <!--########HTTP-AUTH-LOGIN###################################################################################################################-->

    <!-- Uncomment this to enable http basic auth. login using the internal 
         UserAccount resource (Deprecated) -->
    <!-- 
    <security:http auto-config="false" access-denied-page="/aa/login/login-repeated.html"
        path-type="regex">
        <security:intercept-url pattern="/aa/login[^/].*$" access="IS_AUTHENTICATED_FULLY"/>
        <security:intercept-url pattern="/.*" filters="none" />
        <security:x509 subject-principal-regex="CN=(.*?)," user-service-ref="jdbcUserService"/>
        <security:http-basic />
    </security:http>
    
    <security:authentication-provider>
        <security:jdbc-user-service
            id="jdbcUserService"
            data-source-ref="escidoc-core.DataSource"
            users-by-username-query="select loginname, password, 'true' as active from aa.user_account where loginname = ?"
            authorities-by-username-query="select loginname, 'ROLE_ESCIDOC_USER' from aa.user_account where loginname = ?" />
    </security:authentication-provider>
    
    -->

    <!--###########################################################################################################################-->

</beans>
