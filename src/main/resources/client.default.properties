search.database=escidoc_all
# Namespaces
# ir
ns.ir.item=http://www.escidoc.de/schemas/item/0.10
ns.ir.container=http://www.escidoc.de/schemas/container/0.9
ns.ir.context=http://www.escidoc.de/schemas/context/0.7
ns.ir.content-relation=http://www.escidoc.de/schemas/content-relation/0.1
ns.ir.components=http://www.escidoc.de/schemas/components/0.9
# oum
ns.oum.organizational-unit=http://www.escidoc.de/schemas/organizationalunit/0.8
# aa
ns.aa.user-account=http://www.escidoc.de/schemas/useraccount/0.7
ns.aa.user-group=http://www.escidoc.de/schemas/usergroup/0.6
ns.aa.grant=http://www.escidoc.de/schemas/grants/0.5
ns.aa.role=http://www.escidoc.de/schemas/role/0.5
# cmm
ns.cmm.content-model=http://www.escidoc.de/schemas/contentmodel/0.1
# statistic
ns.statistic.scope=http://www.escidoc.de/schemas/scope/0.4
ns.statistic.report-definition=http://www.escidoc.de/schemas/reportdefinition/0.4
ns.statistic.aggregation-definition=http://www.escidoc.de/schemas/aggregationdefinition/0.4
ns.statistic.statistic-data=
# oai
ns.oai.set-definition=http://www.escidoc.de/schemas/setdefinition/0.1

### System properties

# JiBX parser implementation to use (the one below is the default)
# org.jibx.runtime.impl.parser=org.jibx.runtime.impl.StAXReaderFactory

# Enabling the IJC XML catalog implementation:
#
# In order to enable the catalog implementation, the JAR has to contain the file:
# META-INF/services/javax.xml.stream.XMLInputFactory
# with the content:
# de.escidoc.core.common.jibx.IJCWstxInputFactory
# If the application, which is using the IJC, is a web application deployed in a container, it should be isolated
# within this container, in order to avoid the class loading of the other web applications in this container to be 
# affected by this setting, because they may not have the IJCWstxInputFactory in their class path.
# This setup will only take effect, if and only if the system property "javax.xml.stream.XMLInputFactory" is NOT set
# and if there is NO setup in the file "lib/stax.properties" in the JRE directory.
# If you like to extend the XML catalog for any reason, you can extend the IJCWstxInputFactory. Your JAR/WAR etc.
# should supply the file 
# META-INF/services/javax.xml.stream.XMLInputFactory
# with the content:
# my.package.MyWstxInputFactory
#
# Note: If the system property "org.jibx.runtime.impl.parser" (see above) is not set to "org.jibx.runtime.impl.StAXReaderFactory"
# or any extension of "the org.jibx.runtime.impl.StAXReaderFactory", the setting of "javax.xml.stream.XMLInputFactory"
# may not be used. (For example using the XMLPullParser instead.)

### HttpClient parameters
# see: http://hc.apache.org/httpcomponents-client-ga/tutorial/html/
#
# You can also get access to the HttpClient instance by using the HttpClientFactory.
#
# See de.escidoc.core.common.configuration.ConfigurationProvider for available parameters.
#
# Some parameters require a complex type. proxy-settings for example,
# consisting of host and port, are passed as one object.
# These parameters are encoded using the following formats: 

# http.protocol.version=<protocol>/<major>.<minor>
# http.route.local-address=[<hostname>/]<ipAddress>
# http.route.default-proxy=[<scheme>://]<host>[:<port>]
# http.virtual-host=[<scheme>://]<host>[:<port>]
# http.default-host=[<scheme>://]<host>[:<port>]

# To each header its own property.
# Append ascending number-suffixes starting with 1. 
# http.default-headers1=<headerName>:<headerValue>
# http.default-headers2=<headerName>:<headerValue>

# To each cookie-pattern its own property.
# Append ascending number-suffixes starting with 1.
# http.protocol.cookie-datepatterns1=<SimpleDateFormatCompliantString>
# http.protocol.cookie-datepatterns2=<SimpleDateFormatCompliantString>

# max-per-route should be able to define a maximum per route.
# the current implementation supports a default maximum for all routes only
# would have to use xml, to support different maximums for different routes
# http.conn-manager.max-per-route=<integer>

# forced-route should be further configurable.
# this implementation supports a HttpRoute only
# would have to use xml, to support other parameters
# http.route.forced-route=[<scheme>://]<host>[:<port>]
